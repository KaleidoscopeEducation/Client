name: Build & Deploy LibreChat
on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read
  packages: write

env:
  ACR_NAME:  kaleidoscopeaieducation
  ACR_LOGIN: kaleidoscopeaieducation-ajfgb4ceepedbyc5.azurecr.io
  RG_CORE:   main-container-repo
  BICEP_FILE: infra/main.bicep
  APP_IMAGE: libreclient
  NODE_ENV: production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # 1️⃣  Azure OIDC login (uses stock CLI)
    - name: Azure login (OIDC)
      uses: azure/login@v2
      with:
        client-id:       ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # 2️⃣  Remove stock CLI & install 2.72.0 from PyPI  ← **WORK-AROUND**
    - name: Pin Azure CLI to 2.72.0
      run: |
        sudo apt-get remove -y azure-cli
        python -m pip install --quiet --no-cache-dir "azure-cli==2.72.0"
        az --version | head -2        # confirm 2.72.0

    # 3️⃣  ACR login
    - name: ACR login
      run: az acr login --name $ACR_NAME

    # 4️⃣  Build & push image
    - name: Build & push image
      run: |
        docker build -t $ACR_LOGIN/$APP_IMAGE:${{ github.sha }} .
        docker push  $ACR_LOGIN/$APP_IMAGE:${{ github.sha }}

    # 5️⃣  Create JSON parameter file
    - name: Build parameter file
      run: |
        cat > deploy-params.json <<EOF
        {
          "acrName":      { "value": "$ACR_NAME" },
          "imageRepo":    { "value": "$ACR_LOGIN/$APP_IMAGE" },
          "imageTag":     { "value": "${{ github.sha }}" },
          "mongoUri":     { "value": "${{ secrets.MONGO_URI }}" },
          "openaiApiKey": { "value": "${{ secrets.OPENAI_API_KEY }}" },
          "encryptionKey": { "value": "${{ secrets.ENCRYPTION_KEY }}" },
          "credsKey":      { "value": "${{ secrets.CREDS_KEY }}" },
          "credsIv":       { "value": "${{ secrets.CREDS_IV }}" },
          "jwtSecret":     { "value": "${{ secrets.JWT_SECRET }}" },
          "jwtRefreshSecret":  { "value": "${{ secrets.JWT_REFRESH_SECRET }}" },
          "smtpUser":     { "value": "${{ secrets.EMAIL_USERNAME }}" },
          "smtpPass":     { "value": "${{ secrets.EMAIL_PASSWORD }}" },
          "assistantsApiKey": { "value": "${{ secrets.ASSISTANTS_API_KEY }}" }
          "customDomain": { "value": "chat.kaleidoscopeai.net" },
          "existingManagedCertName": { "value": "chat.kaleidoscopeai.net-env-libr-251010184654" }
        }
        EOF
        cat deploy-params.json 

    # 6️⃣  Deploy Bicep
    - name: Deploy to ACA
      run: |
        az deployment group create \
          --resource-group "$RG_CORE" \
          --template-file "$BICEP_FILE" \
          --parameters @deploy-params.json
